	                  VARIATIONS IN LIS(Longest increasing subsequence)

1.Minimum deletions to make an array sorted
2.Maximum sum increasing subsequence
  arr[]={3,20,4,6,7,30} 
  here LIS is of length=4 (ie 3,4,6,7)
  But maximum sum increasing subsequence is 53 (ie 3,20,30)
  ------------------CODE for MSIS----------------
  ll msis[n];
  ll res=0;
  for(ll i=0;i<n;i++)
  {
      msis[i]=arr[i];
      for(ll j=0;j<i;j++)
      {
          if(arr[j]<arr[i])
          msis[i]=max(msis[i],msis[j]+arr[i]);
      }
      res=max(res,msis[i]);
   }

-------------------------------------------------------------------------------

3.Maximum length Bitonic subsequence(first increasing then decreasing)
  Ex. arr[]={1,11,2,10,4,5,2,1}
  sol. 6

  IMP: 
  # if whole array is increasing,then also it is called as bitonic subsequence
  # vice versa for decreasing array

 Solution : 
  For each element find LIS which ends at it and LDS which begins from it.
  For LDS,traverse from end to selected element
  Ex : arr[]={ 1,11,2,10,4,5,2,1 }
       LIS[]={ 1,2,2,3,3,4,2,1 }
       LDS[]={ 1,5,2,4,3,3,2,1 }    find LIS from end of array to each elements

4.  